.Dd $MDocdate: November 5 2015 $
.Dt LIBJKISS 3
.Os
.Sh NAME
.Nm jkiss64_init ,
.Nm jkiss64_rand ,
.Nm jkiss64_reseed ,
.Nm jkiss64_uniform
.Nd 64-bit KISS RNG with pthread support
.Sh SYNOPSIS
.In jkiss.h
.Ft int
.Fn jkiss64_init "void (*seed_func) (jkiss64_seed_t * seed)"
.Ft uint64_t
.Fn jkiss64_rand "void"
.Ft void
.Fn jkiss64_reseed "void"
.Ft uint64_t
.Fn jkiss64_uniform "uint64_t upper_bound"
.Sh DESCRIPTION
The primary functions of this library are
.Fn jkiss_init
and
.Fn jkiss_rand .
The first of these should be called once, perhaps in the main thread
before the others are started, and the second is used to obtain a random
value. Each thread will use its own seed, as set by the
.Fn seed_func .
The period of this RNG function is around 2**250, so repeats due to long
running processes that make heavy use of the RNG are unlikely.
.Pp
.Fn jkiss64_uniform
may be used to obtain a value between 0 and one less than the given
.Ar upper_bound ,
inclusive.
.Pp
The
.Fn jkiss64_reseed
function resets the seed of the thread it is called in. The seed is reseeded using the function pointer passed to
.Fn jkiss_init ,
or if that is
.Dv NULL ,
via a deault implementation that depending on compile options and
platform specifics seeds via
.Xr arc4random 3
calls or by reading from a random device.
.Sh SEE ALSO
.Xr arc4random 3
.Rs
.%A David Jones
.%D May 7 2010
.%T Good Practice in (Pseudo) Random Number Generation for Bioinformatics Applications
.Re
Note that JKISS is not a cryptographic RNG; if cryptographically secure random bits are required, consider an alternative algorithm, such as the ISAAC cipher.
.Sh AUTHORS
.An Jeremy Mates
